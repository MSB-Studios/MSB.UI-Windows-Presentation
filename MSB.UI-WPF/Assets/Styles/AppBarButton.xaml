<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:msuc="clr-namespace:MSB.UI.Controls">

    <ControlTemplate x:Key="AppBarButonWidthLeftLabelTemplate" TargetType="msuc:AppBarButton">
        <Border x:Name="BorderRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlCornerRadius}">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Label}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="IconPresenter" Content="{TemplateBinding Icon}" MinWidth="36" MinHeight="36"/>
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Label" Value="">
                <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="AppBarButonWidthTopLabelTemplate" TargetType="msuc:AppBarButton">
        <Border x:Name="BorderRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlCornerRadius}">
            <StackPanel >
                <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Label}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="IconPresenter" Content="{TemplateBinding Icon}" MinWidth="36" MinHeight="36"/>
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Label" Value="">
                <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="AppBarButonWidthRightLabelTemplate" TargetType="msuc:AppBarButton">
        <Border x:Name="BorderRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlCornerRadius}">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter x:Name="IconPresenter" Content="{TemplateBinding Icon}" MinWidth="36" MinHeight="36"/>
                <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Label}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Label" Value="">
                <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="AppBarButonWidthBottomLabelTemplate" TargetType="msuc:AppBarButton">
        <Border x:Name="BorderRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlCornerRadius}">
            <StackPanel >
                <ContentPresenter x:Name="IconPresenter" Content="{TemplateBinding Icon}" MinWidth="36" MinHeight="36"/>
                <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Label}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Label" Value="">
                <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundPressed}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}"/>
                <Setter TargetName="BorderRoot" Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
                <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="msuc:AppBarButton">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10, 7"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="MinWidth" Value="36"/>
        <Setter Property="Template" Value="{StaticResource AppBarButonWidthBottomLabelTemplate}"/>
        <Style.Triggers>
            <Trigger Property="LabelPosition" Value="Left">
                <Setter Property="Template" Value="{StaticResource AppBarButonWidthLeftLabelTemplate}"/>
            </Trigger>
            <Trigger Property="LabelPosition" Value="Top">
                <Setter Property="Template" Value="{StaticResource AppBarButonWidthTopLabelTemplate}"/>
            </Trigger>
            <Trigger Property="LabelPosition" Value="Right">
                <Setter Property="Template" Value="{StaticResource AppBarButonWidthRightLabelTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>