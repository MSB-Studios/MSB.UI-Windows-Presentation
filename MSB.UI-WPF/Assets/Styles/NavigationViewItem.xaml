<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:msuc="clr-namespace:MSB.UI.Controls">

    <Style TargetType="msuc:NavigationViewItem">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualStyle}"/>
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10, 9"/>
        <Setter Property="Margin" Value="4, 2"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="msuc:NavigationViewItem">
                    <Border x:Name="BorderRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlCornerRadius}">
                        <Border.Resources>
                            <Storyboard x:Key="NotchVisibleStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="NotchTransform" Storyboard.TargetProperty="ScaleY">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="NotchCollapsedToVisibleStoryboard">
                                <DoubleAnimation Storyboard.TargetName="NotchTransform" Storyboard.TargetProperty="ScaleY" To="0.5" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                            <Storyboard x:Key="NotchVisibleToCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="NotchTransform" Storyboard.TargetProperty="ScaleY" To="0" Duration="0:0:0.5">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseIn"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </Border.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="NotchVisibilityStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="NotchCollapsed" To="NotchVisible"
                                                      Storyboard="{StaticResource NotchCollapsedToVisibleStoryboard}"/>
                                    <VisualTransition From="NotchVisible" To="NotchCollapsed"
                                                      Storyboard="{StaticResource NotchVisibleToCollapsedStoryboard}"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NotchCollapsed"/>
                                <VisualState x:Name="NotchVisible"
                                             Storyboard="{StaticResource NotchVisibleStoryboard}"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="5px" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0" x:Name="IconContainer" Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <Viewbox Margin="3">
                                    <ContentPresenter x:Name="IconPresenter" Content="{TemplateBinding Icon}"/>
                                </Viewbox>
                            </Grid>
                            <Rectangle Grid.Column="0" RadiusX="4" RadiusY="4" Width="4" HorizontalAlignment="Left" RenderTransformOrigin="0.5, 0.5">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource ApplicationAccentColor}"/>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <ScaleTransform x:Name="NotchTransform" ScaleY="0"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <ContentPresenter Grid.Column="1" x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconContainer" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}"/>
                            <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedUnfocused}"/>
                            <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedUnfocused}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedUnfocused}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelected}"/>
                            <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}"/>
                            <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundDisabled}"/>
                            <Setter TargetName="IconPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundDisabled}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource NavigationViewItemForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>